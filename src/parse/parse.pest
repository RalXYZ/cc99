cc99 = { SOI ~ (declaration | function_definition)* ~ EOI }

// declaration and definition
declaration = {declaration_specifiers ~ declarator_and_initializer_list ~ ";"}
declarator_and_initializer_list = {declarator_and_initializer ~ ("," ~ declarator_and_initializer)*}
declarator_and_initializer = {declarator ~ ("=" ~ expression)?}
pointer = {(star ~ (type_qualifier)*)+}
declarator = {pointer? ~ raw_declarator}
raw_declarator = {(identifier ~ ("[" ~ expression ~ "]")+) | (identifier ~ "(" ~ function_parameter_list ~ ")") | identifier}
function_parameter_list = {function_parameter? ~ ("," ~ function_parameter)*}
function_parameter = {declaration_specifiers ~ function_parameter_declarator}
function_parameter_declarator = {pointer? ~ function_parameter_raw_declarator}
function_parameter_raw_declarator = {(identifier? ~ ("[" ~ expression ~ "]")+) | (identifier? ~ "(" ~ function_parameter_list ~ ")") | identifier?}

function_definition = {declaration_specifiers ~ pointer? ~ identifier ~ "(" ~ function_parameter_list ~ ")" ~ compound_statement}

declaration_specifiers = {(storage_class_specifier | function_specifier | type_qualifier)* ~ type_specifier ~ (storage_class_specifier | function_specifier | type_qualifier)*}
storage_class_specifier = {"typedef" | "extern" | "static" | "auto" | "register"}
type_qualifier = {"const" | "volatile" | "restrict" | "_Atomic"}
function_specifier = {"inline" | "_Noreturn"}
type_specifier = {"void" | "char" | "int" | "_Bool" | "float" | "double" | identifier}

// statement
statement = {"TODO"}
compound_statement = {"{" ~ (statement | declaration)* ~ "}"}

// expression
expression = {"TODO"}

// basic component
identifier = @{!keyword ~ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")*}

keyword = {"auto" | "break" | "case" | "char" | "const" | "continue" | "default" | "do" | "double" | "else" | "enum" | "extern" | "float" | "for" | "goto" | "if" | "int" | "long" | "register" | "return" | "short" | "signed" | "sizeof" | "static" | "struct" | "switch" | "typedef" | "union" | "unsigned" | "void" | "volatile" | "while" | "_Alignas" | "_Alignof" | "_Atomic" | "_Bool" | "_Complex" | "_Generic" | "_Imaginary" | "_Noreturn" | "_Static_assert" | "_Thread_local"}

star = {"*"}

WHITESPACE = _{ " " | NEWLINE | "\t"}
